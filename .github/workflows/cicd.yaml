name: CI/CD
on: [push]

jobs:
  backend-CI:
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v2
      - name: Node.js 16.x Version
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: 종속 모듈들 캐싱
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/backend/node_modules
          key: npm-packages-${{ hashFiles('**/backend/package-lock.json') }}
        id: cache 
      - name: 종속 모듈들 설치
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --prefix backend
      - name: lint 체크
        run: npm run lint --prefix backend
      - name: 빌드 체크
        run: npm run build --prefix backend
      # - name: 단위 테스트 체크
      #   run: npm run test --prefix backend
      # - name: 통합 테스트 체크
      #   run: npm run test:e2e --prefix backend

  frontend-CI:
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v2
      - name: Node.js 16.x Version
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: 종속 모듈들 캐싱
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/frontend/node_modules
          key: npm-packages-${{ hashFiles('**/frontend/package-lock.json') }}
        id: cache 
      - name: 종속 모듈들 설치
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --prefix frontend
      # - name: lint 체크
      #   run: npm run lint --prefix frontend
      - name: 빌드 체크
        run: npm run build --prefix frontend
      # - name: 단위 테스트 체크
      #   run: npm run test --prefix frontend
      # - name: 통합 테스트 체크
      #   run: npm run test:e2e --prefix frontend

  CD-main:
    name: deploy-main
    runs-on: ubuntu-latest
    needs: [backend-CI, frontend-CI]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: 리모트 쉘 접속
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            source $HOME/.bash_profile
            echo "해당 리포지토리로 이동"
            cd $HOME/git/42cabi-admin
            echo "리포지토리 pull"
            git pull origin main
            echo "앱 빌드"
            cd $HOME/git/42cabi-admin/backend
            npm install
            npm run build:fe
            npm run build
            echo "env 파일 복사"
            cp $HOME/42cabi-admin.env $HOME/git/42cabi-admin/backend/.env
            echo "앱 배포 (reload)"
            pm2 reload 42cabi-admin
